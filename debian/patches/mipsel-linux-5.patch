Description: fix mipsel build with Linux â‰¥ 5.0
 Linux 5.0 switched to generated system call table files, which needs some
 changes in Chromium code. See this commit:
 https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=99bf73ebf9c4193d
Author: Dmitry Shachnev <mitya57@debian.org>
Forwarded: not-yet
Last-Update: 2019-09-27

--- a/src/3rdparty/chromium/sandbox/linux/bpf_dsl/linux_syscall_ranges.h
+++ b/src/3rdparty/chromium/sandbox/linux/bpf_dsl/linux_syscall_ranges.h
@@ -35,14 +35,14 @@
 
 #elif defined(__mips32__)
 
-#include <asm/unistd.h>  // for __NR_O32_Linux and __NR_Linux_syscalls
+#include <asm/unistd_nr_o32.h>  // for __NR_O32_Linux and __NR_O32_Linux_syscalls
 #define MIN_SYSCALL         __NR_O32_Linux
-#define MAX_PUBLIC_SYSCALL  (MIN_SYSCALL + __NR_Linux_syscalls)
+#define MAX_PUBLIC_SYSCALL  (MIN_SYSCALL + __NR_O32_Linux_syscalls)
 #define MAX_SYSCALL         MAX_PUBLIC_SYSCALL
 
 #elif defined(__mips64__)
 
-#include <asm/unistd.h>  // for __NR_64_Linux and __NR_64_Linux_syscalls
+#include <asm/unistd_nr_n64.h>  // for __NR_64_Linux and __NR_64_Linux_syscalls
 #define MIN_SYSCALL         __NR_64_Linux
 #define MAX_PUBLIC_SYSCALL  (MIN_SYSCALL + __NR_64_Linux_syscalls)
 #define MAX_SYSCALL         MAX_PUBLIC_SYSCALL
--- a/src/3rdparty/chromium/sandbox/linux/bpf_dsl/syscall_set.cc
+++ b/src/3rdparty/chromium/sandbox/linux/bpf_dsl/syscall_set.cc
@@ -16,10 +16,10 @@ namespace {
 
 #if defined(__mips32__)
 // This is true for Mips O32 ABI.
-static_assert(MIN_SYSCALL == __NR_Linux, "min syscall number should be 4000");
+static_assert(MIN_SYSCALL == __NR_O32_Linux, "min syscall number should be 4000");
 #elif defined(__mips64__)
 // This is true for MIPS N64 ABI.
-static_assert(MIN_SYSCALL == __NR_Linux, "min syscall number should be 5000");
+static_assert(MIN_SYSCALL == __NR_64_Linux, "min syscall number should be 5000");
 #else
 // This true for supported architectures (Intel and ARM EABI).
 static_assert(MIN_SYSCALL == 0u,
