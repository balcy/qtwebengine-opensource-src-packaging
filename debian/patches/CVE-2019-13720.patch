Description: obtain graph/process lock when nullifying the buffer in Reverb
 When the buffer is set to `null` while there is an active buffer
 within a reverb object, SetBuffer() function can prematurely
 nullify the `reverb_` and `shared_buffer_` while it is still
 being accessed by the rendering thread.
 .
 This CL adds two locks (graph lock and process lock) when the
 buffer gets nullified to ensure the synchronization between
 two threads.
Origin: upstream, https://code.qt.io/cgit/qt/qtwebengine-chromium.git/commit/?id=4fb070d2eb302d11
Last-Update: 2019-11-16

--- a/src/3rdparty/chromium/third_party/blink/renderer/modules/webaudio/convolver_node.cc
+++ b/src/3rdparty/chromium/third_party/blink/renderer/modules/webaudio/convolver_node.cc
@@ -102,6 +102,8 @@ void ConvolverHandler::SetBuffer(AudioBuffer* buffer,
   DCHECK(IsMainThread());
 
   if (!buffer) {
+    BaseAudioContext::GraphAutoLocker context_locker(Context());
+    MutexLocker locker(process_lock_);
     reverb_.reset();
     buffer_ = buffer;
     return;
