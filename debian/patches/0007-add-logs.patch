--- a/src/core/ozone/gl_context_qt.cpp
+++ b/src/core/ozone/gl_context_qt.cpp
@@ -60,6 +60,7 @@ namespace {
 inline void *resourceForContext(const QByteArray &resource)
 {
 #ifndef QT_NO_OPENGL
+    LOG(INFO) << "calling resourceForContext: " << QString(resource).toStdString(); 
     QOpenGLContext *shareContext = qt_gl_global_share_context();
     if (!shareContext) {
         qFatal("QWebEngine: OpenGL resource sharing is not set up in QtQuick. Please make sure to call QtWebEngine::initialize() in your main() function.");
diff -urp a/src/webenginewidgets/render_widget_host_view_qt_delegate_widget.cpp b/src/webenginewidgets/render_widget_host_view_qt_delegate_widget.cpp
--- a/src/webenginewidgets/render_widget_host_view_qt_delegate_widget.cpp	2019-10-23 12:30:32.000000000 +0200
+++ b/src/webenginewidgets/render_widget_host_view_qt_delegate_widget.cpp	2020-01-17 17:05:37.000000000 +0100
@@ -50,6 +50,7 @@
 #include <QSGNode>
 #include <QWindow>
 #include <QtQuick/private/qquickwindow_p.h>
+#include <QDebug>
 
 namespace QtWebEngineCore {
 
@@ -227,6 +228,7 @@ void RenderWidgetHostViewQtDelegateWidge
 
 QRectF RenderWidgetHostViewQtDelegateWidget::viewGeometry() const
 {
+    qDebug() << "QRectF RenderWidgetHostViewQtDelegateWidget::viewGeometry()";
     return QRectF(mapToGlobal(pos()), size());
 }
 
diff -urp a/src/webengine/render_widget_host_view_qt_delegate_quick.cpp b/src/webengine/render_widget_host_view_qt_delegate_quick.cpp
--- a/src/webengine/render_widget_host_view_qt_delegate_quick.cpp	2019-10-23 12:30:32.000000000 +0200
+++ b/src/webengine/render_widget_host_view_qt_delegate_quick.cpp	2020-01-17 17:04:08.000000000 +0100
@@ -48,6 +48,7 @@
 #include <QVariant>
 #include <QWindow>
 #include <QtQuick/private/qquickwindow_p.h>
+#include <QDebug>
 
 namespace QtWebEngineCore {
 
@@ -101,6 +102,7 @@ void RenderWidgetHostViewQtDelegateQuick
 
 QRectF RenderWidgetHostViewQtDelegateQuick::viewGeometry() const
 {
+    qDebug() << "QRectF RenderWidgetHostViewQtDelegateQuick::viewGeometry()";
     // Transform the entire rect to find the correct top left corner.
     const QPointF p1 = mapToGlobal(mapFromScene(QPointF(0, 0)));
     const QPointF p2 = mapToGlobal(mapFromScene(QPointF(width(), height())));
diff -urp a/src/webengine/render_widget_host_view_qt_delegate_quickwindow.cpp b/src/webengine/render_widget_host_view_qt_delegate_quickwindow.cpp
--- a/src/webengine/render_widget_host_view_qt_delegate_quickwindow.cpp	2019-10-23 12:30:32.000000000 +0200
+++ b/src/webengine/render_widget_host_view_qt_delegate_quickwindow.cpp	2020-01-17 17:04:58.000000000 +0100
@@ -41,6 +41,7 @@
 
 #include "qquickwebengineview_p_p.h"
 #include <QQuickItem>
+#include <QDebug>
 
 namespace QtWebEngineCore {
 
@@ -63,6 +64,7 @@ void RenderWidgetHostViewQtDelegateQuick
 
 static inline QRectF mapRectToGlobal(const QQuickItem *item, const QRectF &rect)
 {
+    qDebug() << "static inline QRectF mapRectToGlobal";
     const QPointF p1 = item->mapToGlobal(rect.topLeft());
     const QPointF p2 = item->mapToGlobal(rect.bottomRight());
     return QRectF(p1, p2).normalized();
@@ -77,6 +79,7 @@ static inline QRectF mapRectFromGlobal(c
 
 void RenderWidgetHostViewQtDelegateQuickWindow::initAsPopup(const QRect &screenRect)
 {
+    qDebug() << "void RenderWidgetHostViewQtDelegateQuickWindow::initAsPopup";
     QRectF popupRect(screenRect);
     popupRect = mapRectFromGlobal(m_virtualParent, popupRect);
     popupRect = m_virtualParent->mapRectToScene(popupRect);
@@ -165,6 +168,7 @@ void RenderWidgetHostViewQtDelegateQuick
 
 void RenderWidgetHostViewQtDelegateQuickWindow::move(const QPoint &screenPos)
 {
+    qDebug() << "void RenderWidgetHostViewQtDelegateQuickWindow::move";
     QRectF popupRect(screenPos, size());
     popupRect = mapRectFromGlobal(m_virtualParent, popupRect);
     popupRect = m_virtualParent->mapRectToScene(popupRect);
